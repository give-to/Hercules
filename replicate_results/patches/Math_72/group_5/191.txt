src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java:225:replace:0,5$if (!isBracketing(lower, initial, upper)) {throw MathRuntimeException.createIllegalArgumentException("invalid interval, initial value parameters:lower={0}, initial={1}, upper={2}",lower, initial, upper);}
src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java:230:replace:0,5$/ * * * Verifies that < code > lower < initial < upper < / code > * throws IllegalArgumentException if not * * @param lower lower endpoint * @param initial initial value * @param upper upper endpoint * @throws IllegalArgumentException * / protected void verifySequence ( final double lower , final double initial , final double upper ) { if ( ! isBracketing ( lower , initial , upper ) ) { throw MathRuntimeException . createIllegalArgumentException ( "invalid interval , initial value parameters : lower = { 0 } , initial = { 1 } , upper = { 2 } " , lower , initial , upper ) ; } }
src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java:208:replace:0,5$if (!isBracketing(lower, upper, upper)) {throw MathRuntimeException.createIllegalArgumentException("invalid interval, upper value parameters:lower={0}, upper={1}, upper={2}",lower, upper, upper);}
