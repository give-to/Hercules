src/main/java/org/apache/commons/lang3/math/NumberUtils.java:509:replace:0,59$if (!Character.isDigit(lastChar)) {if (expPos > -1 && expPos < str.length() - 1) {exp = str.substring(expPos + 1, str.length() - 1);} else {exp = null;}final String numeric = str.substring(0, str.length() - 1);final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);switch (lastChar) {case 'l' :case 'L' :if (dec == null&& exp == null&& (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {try {return createLong(numeric);} catch (final NumberFormatException nfe) { }return createBigInteger(numeric);}throw new NumberFormatException(str + " is not a valid number.");case 'f' :case 'F' :try {final Float f = NumberUtils.createFloat(numeric);if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {return f;}} catch (final NumberFormatException nfe) { }case 'd' :case 'D' :try {final Double d = NumberUtils.createDouble(numeric);if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {return d;}} catch (final NumberFormatException nfe) { }try {return createBigDecimal(numeric);} catch (final NumberFormatException e) { }default :throw new NumberFormatException(str + " is not a valid number.");}}
