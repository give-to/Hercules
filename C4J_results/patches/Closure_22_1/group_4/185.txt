src/com/google/javascript/jscomp/CheckSideEffects.java:103:replace:0,5$if (gramps.getAncestors() && parent == gramps.getFirstChild()) {if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {return;}}
src/com/google/javascript/jscomp/NodeUtil.java:3124:replace:0,5$if ( gramps . getAncestors ( ) && parent == gramps . getFirstChild ( ) ) { / / Semantically , a direct call to eval is different from an indirect / / call to an eval . See ECMA - 262 S15 . 1 . 2 . 1 . So it's OK for the first / / expression to a comma to be a no - op if it's used to indirect / / an eval . This we pretend that this is "used" . if ( expr == parent . getFirstChild ( ) && parent . getChildCount ( ) == 2 && expr . getNext ( ) . isName ( ) && "eval" . equals ( expr . getNext ( ) . getString ( ) ) ) { return true ; } }
