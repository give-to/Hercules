src/com/google/javascript/jscomp/SyntacticScopeCreator.java:189:replace:0,27$if (s.isGlobal()) {Scope.Var origVar = scope.getVar(name);Node origParent = origVar.getParentNode();if (origParent.getType() == Token.CATCH &&parent.getType() == Token.CATCH) {return;}boolean allowDupe = false;JSDocInfo info = n.getJSDocInfo();if (info == null) {info = parent.getJSDocInfo();}allowDupe =info != null && info.getSuppressions().contains("duplicate");if (!allowDupe) {compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input != null? origVar.input.getName(): "??")));}}
src/com/google/javascript/jscomp/SyntacticScopeCreator.java:216:replace:0,27$public void onRedeclaration ( Scope s , String name , Node n , Node parent , Node gramps , Node nodeWithLineNumber ) { / / Don't allow multiple variables to be declared at the top level scope if ( s . isGlobal ( ) ) { Scope . Var origVar = scope . getVar ( name ) ; Node origParent = origVar . getParentNode ( ) ; if ( origParent . getType ( ) == Token . CATCH & & parent . getType ( ) == Token . CATCH ) { return ; } boolean allowDupe = false ; JSDocInfo info = n . getJSDocInfo ( ) ; if ( info == null ) { info = parent . getJSDocInfo ( ) ; } allowDupe = info != null && info . getSuppressions ( ) . contains ( "duplicate" ) ; if ( ! allowDupe ) { compiler . report ( JSError . make ( sourceName , nodeWithLineNumber , VAR_MULTIPLY_DECLARED_ERROR , name , ( origVar   . input != null ? origVar . input . getName (  ) : " ? ? " ) ) ) ;                                                }                              }                                                                 }
