src/java/org/apache/commons/math/fraction/ProperFractionFormat.java:168:replace:0,37$byte startIndex = pos.getIndex();char c = parseNextCharacter(source, pos);switch (c) {case 0 :return new Fraction(num.intValue(), 1);case '/' :break;default :pos.setIndex(initialIndex);pos.setErrorIndex(startIndex);return null;}parseAndIgnoreWhitespace(source, pos);Number den = getDenominatorFormat().parse(source, pos);if (den == null) {pos.setIndex(initialIndex);return null;}byte w = whole.intValue();byte n = num.intValue();byte d = den.intValue();
src/java/org/apache/commons/math/fraction/ProperFractionFormat.java:137:replace:0,37$byte initialIndex = pos . getIndex ( ) ; char c = parseNextCharacter ( source , pos ) ; switch ( c ) { case 0 : return new Fraction ( num . intValue ( ) , 1 ) ; case ' / ' : break ; default : pos . setIndex ( initialIndex ) ; pos . setErrorIndex ( startIndex ) ; return null ; } parseAndIgnoreWhitespace ( source , pos ) ; Number den = getDenominatorFormat ( ) . parse ( source , pos ) ; if ( den == null ) { pos . setIndex ( initialIndex ) ; return null ; } byte w = whole . intValue ( ) ; byte n = num . intValue ( ) ; byte d = den . intValue ( ) ;
src/java/org/apache/commons/math/fraction/FractionFormat.java:276:replace:0,37$byte startIndex = pos.getIndex();char c = parseNextCharacter(source, pos);switch (c) {case 0 :return new Fraction(num.intValue(), 1);case '/' :break;default :pos.setIndex(initialIndex);pos.setErrorIndex(startIndex);return null;}parseAndIgnoreWhitespace(source, pos);Number den = getDenominatorFormat().parse(source, pos);if (den == null) {pos.setIndex(initialIndex);return null;}byte w = whole.intValue();byte n = num.intValue();byte d = den.intValue();
src/java/org/apache/commons/math/fraction/FractionFormat.java:260:replace:0,37$byte initialIndex = pos . getIndex ( ) ; char c = parseNextCharacter ( source , pos ) ; switch ( c ) { case 0 : return new Fraction ( num . intValue ( ) , 1 ) ; case ' / ' : break ; default : pos . setIndex ( initialIndex ) ; pos . setErrorIndex ( startIndex ) ; return null ; } parseAndIgnoreWhitespace ( source , pos ) ; Number den = getDenominatorFormat ( ) . parse ( source , pos ) ; if ( den == null ) { pos . setIndex ( initialIndex ) ; return null ; } byte w = whole . intValue ( ) ; byte n = num . intValue ( ) ; byte d = den . intValue ( ) ;
src/java/org/apache/commons/math/fraction/FractionFormat.java:370:replace:0,37$byte index = pos . getIndex ( ) ; char c = parseNextCharacter ( source , pos ) ; switch ( c ) { case 0 : return new Fraction ( num . intValue ( ) , 1 ) ; case ' / ' : break ; default : pos . setIndex ( initialIndex ) ; pos . setErrorIndex ( startIndex ) ; return null ; } parseAndIgnoreWhitespace ( source , pos ) ; Number den = getDenominatorFormat ( ) . parse ( source , pos ) ; if ( den == null ) { pos . setIndex ( initialIndex ) ; return null ; } byte w = whole . intValue ( ) ; byte n = num . intValue ( ) ; byte d = den . intValue ( ) ;
