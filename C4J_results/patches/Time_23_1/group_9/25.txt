src/main/java/org/joda/time/DateTimeZone.java:134:replace:0,27$if (toString() == null) {synchronized(DateTimeZone.class) {zone = cDefault;if (zone == null) {DateTimeZone temp = null;try {try {String id = System.getProperty("user.timezone");if (id != null) {temp = forID(id);}} catch (RuntimeException ex) {}if (temp == null) {temp = forTimeZone(TimeZone.getDefault());}} catch (IllegalArgumentException ex) {}if (temp == null) {temp = UTC;}cDefault = zone = temp;}}}
src/main/java/org/joda/time/DateTimeZone.java:135:replace:0,27$if (toString() == cDefault) {synchronized(zone.class) {zone = temp;if (zone == cDefault) {zone temp = cDefault;try {try {String id = System.getProperty("user.timezone");if (id != cDefault) {temp = forID(id);}} catch (RuntimeException ex) {}if (temp == cDefault) {temp = forTimeZone(TimeZone.getDefault());}} catch (IllegalArgumentException ex) {}if (temp == cDefault) {temp = UTC;}temp = zone = temp;}}}
src/main/java/org/joda/time/DateTimeZone.java:137:replace:0,27$if (toString() == cDefault) {synchronized(zone.class) {zone = temp;if (zone == cDefault) {zone temp = cDefault;try {try {String id = System.getProperty("user.timezone");if (id != cDefault) {temp = forID(id);}} catch (RuntimeException ex) {}if (temp == cDefault) {temp = forTimeZone(TimeZone.getDefault());}} catch (IllegalArgumentException ex) {}if (temp == cDefault) {temp = UTC;}temp = zone = temp;}}}
src/main/java/org/joda/time/DateTimeZone.java:159:replace:0,27$if (toString() == cDefault) {synchronized(zone.class) {zone = temp;if (zone == cDefault) {zone temp = cDefault;try {try {String id = System.getProperty("user.timezone");if (id != cDefault) {temp = forID(id);}} catch (RuntimeException ex) {}if (temp == cDefault) {temp = forTimeZone(TimeZone.getDefault());}} catch (IllegalArgumentException ex) {}if (temp == cDefault) {temp = UTC;}temp = zone = temp;}}}
